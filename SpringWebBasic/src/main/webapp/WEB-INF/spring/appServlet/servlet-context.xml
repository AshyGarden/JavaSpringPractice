<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet 관련 설정들이 모여있는xml -->
	
	<!-- handler adapter,handler mapping객체가
		개발자가 작성한 컨트롤러등을 찾을수 있게 설정하는 태그 -->
	<annotation-driven />

	<!-- 정적 자원(html, css, js, img등...)을 절대경로로 쉽게 맵핑해주는 태그
		 mapping에 작성된 경로: 외부로 노출되는 경로, location: 실제 파일경로 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!--ViewResolver bean등록
	
	컨트롤러가 return한 view문자열을 해석하여 경로를 만들어서 파일을 찾아 응답하는 viewresolver의 bean등록코드
	-prefix, suffix필드의 setter주입을 통해 컨트롤러에서 리턴된 문자열을 조립함. -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" /> 
		<beans:property name="suffix" value=".jsp" /> <!-- 받은 home문자열을 이용해서 경로를 완성 -->
	</beans:bean>
	
	<!-- anntation을 사용해서 자동으로 bean등록을 하게해주는 설정태그(ex-controller의 @controller)
		<beans:bean>태그를 통해 수동으로 등록도 가능하지만, anntation으로도 등록 가능
		- com.spring.basic으로 경로가 시작하는 모든 클래스를 대상으로 annotation으로 지정되어있는
		클래스를 찾아 자동으로 bean 등록실행 -->
	<context:component-scan base-package="com.spring.basic" />
	
	
	
</beans:beans>
